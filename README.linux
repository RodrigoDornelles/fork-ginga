Ginga reference implementation by PUC-Rio/Laboratorio TeleMidia
===============================================================

Build dependencies
==================

* Optional dependencies
  * LIBRT   (required if --enable-multiprocess is given)
  * EXPAT   (required if --enable-components is given)
  * LIBJPEG (required if --enable-multidevice is given)
  * LIBZIP  (required if --enable-multidevice is given)

* Required dependencies
  * XERCES-C
  * CURL
  * SDL2
  * SDL2_image
  * SDL2_ttf
  * FFMPEG (compiled with: --prefix=/usr --incdir=/usr/include/ffmpeg --enable-static --enable-shared --enable-gpl --enable-postproc --disable-programs --disable-sdl --enable-pic --build-suffix=ffmpeg)
    + libavcodec
    + libavdevice
    + libavfilter
    + libavformat
    + libavutil
    + libswresample
    + libswscale
    + libpostproc
  * NCLUA
  * Berkelium

Build example for Debian (and Debian-like as Ubuntu and Mint) using dependencies from Telemidia's repository
============================================================================================================

* Installing depencies

  sudo apt-get install build-essential libjpeg-dev autoconf automake libtool libcurl4-openssl-dev libexpat1-dev libxerces-c-dev libsdl2-ttf-dev libsdl2-image-dev libsdl2-dev libzip-dev imagemagick libespeak-dev espeak-data
  sudo echo "deb http://www.telemidia.puc-rio.br/~rafaeldiniz/ginga4linux/debian amd64/ " >> /etc/apt/sources.list
  sudo apt-get update
  sudo apt-get install berkelium ffmpegext nclua

* Apply patch to use Telemidia's ffmpeg instead Debian/Ubuntu's libav.

  ./debian/scripts/fix_configure_ac_ffmpeg.sh

* Build ginga.

  ./bootstrap
  ./configure --enable-data-processing --enable-linuxdvb --enable-espeak --prefix=/usr --libdir=/usr/lib LDFLAGS="-Wl,--no-as-needed" 
  make -j4
  sudo make install


Import to eclipse CDT
=====================
One way to code in ginga source is using Eclipse CDT(www.eclipse.org/cdt) doing:
import -> C/C++ -> "Existing Code as Makefile Project" -> chose "GNU Autotools toolchain" -> finish.

